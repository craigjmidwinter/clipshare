version: '3.8'

services:
  clipshare:
    image: ghcr.io/craigjmidwinter/clipshare:latest
    container_name: clipshare-production
    ports:
      - "3000:3000"
    volumes:
      # SINGLE DATA DIRECTORY: All persistent data in one place for easy backup
      # This single directory contains all your data: clips, database, logs, temp files
      - clipshare_data:/app/data
      
      # Mount timezone data for accurate timestamps
      - /etc/localtime:/etc/localtime:ro
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      
      # Database Configuration (SQLite by default)
      - DATABASE_URL=file:/app/data/db/clipshare.db
      
      # Authentication (REQUIRED for production)
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-https://clipshare.yourdomain.com}
      
      # File Processing Configuration (all within single data directory)
      - CLIPS_DIR=/app/data/processed-files/clips
      - EXPORT_DIR=/app/data/processed-files/exports
      - TEMP_DIR=/app/data/temp
      
      # Performance Configuration
      - PROCESS_CONCURRENCY=${PROCESS_CONCURRENCY:-4}
      - MAX_CONCURRENT_JOBS=${MAX_CONCURRENT_JOBS:-2}
      - MAX_CLIP_SIZE=${MAX_CLIP_SIZE:-500MB}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health || http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - clipshare_network

  # Optional: PostgreSQL database for larger deployments
  # Uncomment if you prefer PostgreSQL over SQLite and update DATABASE_URL above
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: clipshare-postgres
  #   environment:
  #     - POSTGRES_DB=${POSTGRES_DB:-clipshare}
  #     - POSTGRES_USER=${POSTGRES_USER:-clipshare}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./backups:/backups
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-clipshare} -d ${POSTGRES_DB:-clipshare}"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - clipshare_network

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: clipshare-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - clipshare_data:/var/www/clips:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - clipshare
    restart: unless-stopped
    networks:
      - clipshare_network

  # Optional: Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: clipshare-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - clipshare_network

volumes:
  clipshare_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/clipshare/data
  postgres_data:
    driver: local
  nginx_logs:
    driver: local
  redis_data:
    driver: local

networks:
  clipshare_network:
    driver: bridge